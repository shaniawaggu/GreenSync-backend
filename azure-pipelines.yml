trigger:
  branches:
    include:
      - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Docker Hub repository names and image tags
  dockerHubRepoMvc: 'htflynn/forecast-mvc'
  dockerHubRepoDb: 'htflynn/forecast-db'
  dockerHubTagMvc: '0.0.3.RELEASE'
  dockerHubTagDb: '0.0.1.RELEASE'

  # AKS details
  aksResourceGroup: 'myAKSResourceGroup'
  aksClusterName: 'myAKSCluster'

stages:
- stage: Build
  displayName: 'Build and Push Docker Images'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push Images'
    steps:
    - task: Docker@2
      displayName: 'Build and Push forecast-mvc'
      inputs:
        containerRegistry: 'DockerHubServiceConnection'
        repository: $(dockerHubRepoMvc)
        command: buildAndPush
        Dockerfile: 'Dockerfile.mvc'
        tags: |
          $(dockerHubTagMvc)
    - task: Docker@2
      displayName: 'Build and Push forecast-db'
      inputs:
        containerRegistry: 'DockerHubServiceConnection'
        repository: $(dockerHubRepoDb)
        command: buildAndPush
        Dockerfile: 'Dockerfile.db'
        tags: |
          $(dockerHubTagDb)

- stage: Deploy
  displayName: 'Deploy to AKS'
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: 'Deploy Updated Images to AKS'
    steps:
    - task: AzureCLI@2
      displayName: 'Get AKS Credentials and Update Deployments'
      inputs:
        azureSubscription: 'AzureServiceConnection'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Fetching AKS credentials..."
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName) --overwrite-existing
          
          echo "Updating forecast-mvc deployment..."
          kubectl set image deployment/forecast-mvc forecast-mvc=$(dockerHubRepoMvc):$(dockerHubTagMvc) --record
          
          echo "Updating forecast-db deployment..."
          kubectl set image deployment/forecast-db forecast-db=$(dockerHubRepoDb):$(dockerHubTagDb) --record
